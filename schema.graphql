type Album {
  accessByUsers: [User!]!
  createdAt: DateTime!
  id: ID!
  owner: User!
  permission: AlbumPermission!
  photos: [Photo!]!
  title: String!
  updatedAt: DateTime!
}

input AlbumOrderBy {
  size: OrderBy
  title: OrderBy
  updatedAt: OrderBy
}

enum AlbumPermission {
  CAN_READ
  CAN_WRITE
}

type AuthPayload {
  token: String!
}

input CreatePhotoInput {
  albumId: ID
  metadata: JSON
  photo: Upload!
  tags: [String!]!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

scalar JSON

type Media {
  id: ID!
  url: String
}

type Mutation {
  addAccessUser(id: ID!, userEmail: String!): Album!
  createAlbum(title: String!): Album!
  createPhoto(data: CreatePhotoInput!): Photo!
  deleteAlbum(id: ID!): Album!
  deletePhoto(id: String!): Photo!
  deleteUser(id: ID!): User!
  removeAccessUser(id: ID!, userEmail: String!): Album!
  signIn(email: String!, password: String!): AuthPayload!
  signUp(email: String!, password: String!): AuthPayload!
  updateAlbum(id: ID!, permission: AlbumPermission, title: String): Album!
  updateTag(id: ID!, tags: [String!]!): Photo!
}

enum OrderBy {
  Asc
  Desc
}

type Photo {
  id: ID!
  media: Media!
  metadata: JSON!
  owner: User!
  tags: [Tag!]!
}

input PhotoOrderBy {
  createdAt: OrderBy
}

type Query {
  album(id: ID!): Album
  albums(orderBy: AlbumOrderBy, skip: Int = 0, take: Int = 10, where: WhereAlbumInput): [Album!]!
  albumsCount(where: WhereAlbumInput): Int!
  me: User
  photos(orderBy: PhotoOrderBy, skip: Int = 0, take: Int = 10, where: WherePhotoInput): [Photo!]!
  photosCount(where: WherePhotoInput): Int!
}

type Tag {
  id: ID!
  name: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  albums: [Album!]!
  createdAt: DateTime!
  email: String!
  id: ID!
  password: String!
  role: UserRole!
}

enum UserRole {
  ADMIN
  USER
}

input WhereAlbumInput {
  isMyAlbum: Boolean
  title: String
}

input WherePhotoInput {
  albumId: ID
  search: String
}
